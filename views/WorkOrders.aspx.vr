Using System
Using System.Data
Using System.Configuration
Using System.Collections
Using System.Web
Using System.Web.Security
Using System.Web.UI
Using System.IO 
Using System.Web.UI.WebControls
Using System.Web.UI.WebControls.WebParts
Using System.Web.UI.HtmlControls

BegClass WorkOrders Partial(*Yes) Access(*Public) Extends(System.Web.UI.Page)

	DclDb DGDB DBName('*Public/Cypress') 

	DclFld workList Type(DoctorOrderList) 

	DclFld PageNumber Type(*Integer4) 
	DclFld Filter Type(*String) 
	DclFld CurrentControl Type(*String) Access(*Public) 
	DclFld DebugMessage Type(*String) Access(*Public) 

    BegSr Page_Load Access(*Private) Event(*This.Load)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

		DclFld CurrentMaster Type(HomeMaster) 
		DebugMessage = String.Empty

		If ViewState['filter'] = *Nothing
			Filter = String.Empty
		Else
			Filter = ViewState['filter'].ToString() 
			ClearFilter.Text = String.Format("Filtered on '{0}'. Tap to clear filter", *This.Filter) 
			FilterContainer.Visible = *True 
		EndIf 
	
		Page.Title = 'Work orders'
		CurrentMaster = *This.Master *As HomeMaster
		CurrentMaster.ChildPage = *New FileInfo(*This.Request.Url.LocalPath).Name
		CurrentMaster.PageHeading = 'Work order ready?'
	
		workList = *New DoctorOrderList(DGDB, 15) 

        If (NOT Page.IsPostBack)
			PageNumber = 1
			ViewState['pagenumber'] = PageNumber 
			PopulateList(PageNumber, *This.Filter) 
        EndIf
    EndSr

	BegSr PopulateList
		DclSrParm PageNumber Type(*Integer4) 
		DclSrParm Filter Type(*String) 

		listviewWorkOrders.DataSource = workList.PopulateList(PageNumber, Filter)
		listviewWorkOrders.DataBind()
	EndSr

	BegSr Page_PreRender Access(*Private) Event(*This.PreRender)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

		FilterContainer.Visible = String.IsNullOrEmpty(*This.Filter)? *False : *True
    EndSr

    BegSr Page_Unload Access(*Private) Event(*This.Unload)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

		FilterContainer.Visible = String.IsNullOrEmpty(*This.Filter)? *False : *True

		Close *All
		Disconnect DGDB
    EndSr

	BegSr linkbuttonLogout_Click Access(*Private) Event(*This.linkbuttonLogout.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

		FormsAuthentication.SignOut()
		FormsAuthentication.RedirectToLoginPage()		
	EndSr

	BegSr ShowPrevPageButton_Click Access(*Private) Event(*This.ShowPrevPageButton.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)
		
		PageNumber = Convert.ToInt32(ViewState['pagenumber'].ToString())
		If (PageNumber = 1) 
			LeaveSr 
		EndIf
		PageNumber -= 1 				
		PopulateList(PageNumber, *This.Filter) 
		ViewState['pagenumber'] = PageNumber 
	EndSr

	BegSr ShowNextPageButton_Click Access(*Private) Event(*This.ShowNextPageButton.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)
		
		PageNumber = Convert.ToInt32(ViewState['pagenumber'].ToString())
		PageNumber += 1 				
		PopulateList(PageNumber, *This.Filter) 
		ViewState['pagenumber'] = PageNumber 
	EndSr

	BegSr FilterListButton_Click Access(*Private) Event(*This.FilterListButton.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

		SetFilter() 
	EndSr 

	BegSr SetFilter 
		*This.Filter = FilterValue.Text 

		PageNumber = 1
		PopulateList(PageNumber, *This.Filter) 
		ViewState['pagenumber'] = PageNumber 
		ViewState['filter'] = *This.Filter 	
		ClearFilter.Text = String.Format("Filtered on '{0}'. Tap to clear filter", *This.Filter) 
		ClearFilter.Visible = *True 
	EndSr
		
	BegSr ClearFilter_Click Access(*Private) Event(*This.ClearFilter.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

		*This.Filter = String.Empty 
		
		*This.PageNumber = 1
		PopulateList(*This.PageNumber, *This.Filter) 
		ViewState['pagenumber'] = *This.PageNumber 
		ViewState['filter'] = *This.Filter 	
		ClearFilter.Visible = *False
		ClearFilter.Text = String.Empty 
	EndSr
EndClass
